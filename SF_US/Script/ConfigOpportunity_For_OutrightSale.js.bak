function EditOpportunity_Page()
{
  //Clicks the 'GlobalSearch_Tab' control.
  Aliases.browser.Page__PreAccountApproval.Home__Panel.UserLogedIn__Panel.GlobalAccount__Tab.Click();
  
  //Delays the test execution for the specified time period.
 // Delay(2000);
  
//Clicks the 'Opportunity_Tab' control.
  //Aliases.browser.Page__PreAccountApproval.Home__Panel.UserLogedIn__Panel.GlobalOpportunities__Tab.Click();
  
  //Delays the test execution for the specified time period.
  //Delay(2000);

   
  //Sets the text Project.Variables.OpportunityName in the 'GlobalSearch_Bar' text editor.
  Aliases.browser.Page__PreAccountApproval.Home__Panel.headerOneheader2.GlobalSearch__Field.SetText(Project.Variables.OpportunityName);
  
  //Delays the test execution for the specified time period.
  Delay(2000);
  
  //Enters '[Enter]' in the 'GlobalSearch_Bar' object.
  Aliases.browser.Page__PreAccountApproval.Home__Panel.headerOneheader2.GlobalSearch__Field.Keys("[Enter]");
  //Delays the test execution for the specified time period.
  Delay(2000);
  
  
  //Clicks the 'NewOpportunity_Tab' link.
  Aliases.browser.Page__PostAccountApproval.NewOpportunity__Tab.Click();
  
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'TypeEdit_Button' button.
 let browserWindow = NameMapping.Sys.browser;
  
  
  browserWindow.pageCasinoRoyaleAccountSalesforc.panelAccount.Keys("[Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down][Down]");
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'Type_Button' button.
 // Aliases.browser.Page__PreAccountApproval.Detail__Panel.TypeEdit__Button.Click();
  //Delays the test execution for the specified time period.
    //Delay(2000);
    Aliases.browser.Page__PreAccountApproval.Detail__Panel.TypeEdit__Button.Regular__Button.Click();
  Delay(2000);
  //Clicks the 'Regular_Tab' control.
  //Aliases.browser.Page__PreAccountApproval.Detail__Panel.TypeEdit__Button.Regular__Button.Regular__Tab.Click();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'Save_button' button.
  Aliases.browser.Page__AccountCreation.Save__button.ClickButton();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Checks whether the 'contentText' property of the Aliases.browser.PostAccountApproval_Tab.D365CompanyCode_Field.TypeEdit_Button object equals 'Edit Type'.
 // aqObject.CheckProperty(Aliases.browser.Page__PostAccountApproval.D365CompanyCode__Field.TypeEdit__Button, "contentText", cmpEqual, "Edit Type");
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'EditLineItem_Tab' button.
  Aliases.browser.Page__PreAccountApproval.Home__Panel.EditLineItem__Tab.ClickButton();
  //Clicks the 'Add_button' button.
  NameMapping.Sys.browser.pageCasinoRoyaleAccountSalesforc.Add__Button.ClickButton();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'Families_Tab' button.
 Aliases.browser.Page__EditLineItem.textnodeAllFamilies.Families__Tab.ClickButton();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Simulates a left-button single click in a window or control as specified (relative position, shift keys).
 Aliases.browser.Page__EditLineItem.textnodeAllFamilies.EGM__Tab.Click();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'ProductSearch_Bar' control.
  Aliases.browser.Page__EditLineItem.ProductSearch__Bar.Click();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Sets the text 'Helix Plus Upright' in the 'ProductSearch_Bar' text editor.
  Aliases.browser.Page__EditLineItem.ProductSearch__Bar.SetText("Helix Plus Upright");
  //Delays the test execution for the specified time period.
  Delay(4000);
  //Clicks the 'HelixPlusUpright_Tab' control.
  Aliases.browser.Page__EditLineItem.HelixPlusUpright__Tab.Click();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'OutrightSaleNew_Tab' control.
Aliases.browser.Page__EditLineItem.OutrightSaleNew__Tab.Click();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'Continue_Button' button.
 Aliases.browser.Page__EditLineItem.Continue__Button.ClickButton();
  //Delays the test execution for the specified time period.
  Delay(2000);
  //Clicks the 'ApplyPrefrence_Button' button.
  Aliases.browser.Page__EditLineItem.sectionConfigure.ApplyPrefrence__Button.Click();
  //Delays the test execution for the specified time period.
  Delay(4000);
  //Checks whether the 'contentText' property of the Aliases.browser.section.sectionConfigure.ApplyPrefrence_Button object equals 'MainFloor'.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.ApplyPrefrence__Button, "contentText", cmpEqual, "MainFloor");
  Delay(4000);
  //Clicks the 'buttonSave2' button.
  Aliases.browser.Page__EditLineItem.Save__Button3.Click();
  //Simulates a left-button single click in a window or control as specified (relative position, shift keys).
  //Aliases.browser.section.sectionConfigure.License_Tab.Click();
  //Delays the test execution for the specified time period.
  Delay(4000);
  //Checks whether the 'contentText' property of the Aliases.browser.section.sectionConfigure.panelRequired object equals 'Required !'.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Required__Panel, "contentText", cmpEqual, "Required !");
  //Selects the 3 item of the 'License_Tab' combo box.
 Aliases.browser.Page__EditLineItem.sectionConfigure.License__Tab.ClickItem(3);
  //Delays the test execution for the specified time period.
  //Delay(4000);
  
 

}

function EditLineItem_Validation()
{
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.buttonMainfloor object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Mainfloor__Button, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.panelPromotion object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Promotion__Tab, "Enabled", cmpEqual, true);
  //Checks whether the 'value' property of the Aliases.browser.section2.sectionConfigure2.textbox2 object equals '1'.
  //aqObject.CheckProperty(Aliases.browser.section2.sectionConfigure2.textbox2, "value", cmpEqual, "1");
  //Clicks the 'buttonMainfloor' button.
  Aliases.browser.Page__EditLineItem.sectionConfigure.Mainfloor__Button.ClickButton();
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.select22 object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.BillAccepter__Tab, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.select32 object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Printer__Tab, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.select4 object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Trim__Tab, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.panel object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Licence__panel, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.panelButtonPanel2 object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.Button__Panel, "Enabled", cmpEqual, true);
  //Checks whether the 'Enabled' property of the Aliases.browser.section.sectionConfigure.panelOtherDiscounts2 object equals True.
  aqObject.CheckProperty(Aliases.browser.Page__EditLineItem.sectionConfigure.OtherDiscount__Panel, "Enabled", cmpEqual, true);
}

 function Close_EditLine_Item()
{
 Delay(4000);
 //Browsers.Item(btChrome).Navigate("https://aristocrat-global--qa1.sandbox.lightning.force.com/lightning/r/Opportunity/0069r00000HGCl0AAH/view");
  let browserWindow = NameMapping.Sys.browser;
 
  let browser = Aliases.browser;
  Delay(4000);
  Aliases.browser.Page__EditLineItem.Save__Button3.ClickButton();
  
 // aqObject.CheckProperty(browser.Page__AccountCreation.AccountCreation__Toast, "contentText", cmpEqual, "Success notification.\nProduct Configuration saved.\nPress Control + F6 to navigate to the next toast notification or focusable region.\nClose");
  Delay(4000);
  browserWindow.pageCasinoRoyaleAccountSalesforc.Close__Button.ClickButton();
 
 //Clicks the 'buttonSave2' button.
// Log.Message("Save")
 // NameMapping.Sys.browser.pageCasinoRoyaleAccountSalesforc.buttonSave3.Click();
  
  //Delays the test execution for the specified time period.

 
  //Checks whether the 'contentText' property of the Aliases.browser.AccountCreation_Page.AccountCreation_Toast object equals 'Success notification.
  //Product Configuration saved.
  //Press Control + F6 to navigate to the next toast notification or focusable region.
  //Close'.
 // Delay(4000);
  //Log.Message("success");
//  aqObject.CheckProperty(Aliases.browser.Page__AccountCreation.AccountCreation_Toast, "contentText", cmpEqual, "Success notification.\nProduct Configuration saved.\nPress Control + F6 to navigate to the next toast notification or focusable region.\nClose");
//  Delay(8000);
//  Log.Message("close")
//  NameMapping.Sys.browser.pageCasinoRoyaleAccountSalesforc.Close__Button.Click();
}

function Test1()
{
  //Browsers.Item(btChrome).Navigate("https://aristocrat-global--qa1.sandbox.lightning.force.com/lightning/r/Opportunity/0069r00000HGCl0AAH/view");
  let browserWindow = NameMapping.Sys.browser;
 
  let browser = Aliases.browser;
  Aliases.browser.Page__EditLineItem.Save__button.ClickButton();
  aqObject.CheckProperty(browser.Page__AccountCreation.AccountCreation__Toast, "contentText", cmpEqual, "Success notification.\nProduct Configuration saved.\nPress Control + F6 to navigate to the next toast notification or focusable region.\nClose");
  browserWindow.pageCasinoRoyaleAccountSalesforc.Close__Button.ClickButton();
}

function Test2()
{
  
  
}