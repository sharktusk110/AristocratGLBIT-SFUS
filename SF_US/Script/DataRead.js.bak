/*Function Name: dataReader(WorkBookName,sheetName)
  I/P Parameters: WorkBookName,sheetName
  O/P Parameter: dataReaderMap
  Description: When ever read the data from the Excel which is located in project folder path\\Data_Sheets Folder,
               Send the Excel Work book Name and Work Sheet name as parameters and this function returns paire of Column name and values on row base

*/
function dataReader_old(WorkBookName,sheetName) //WorkBookName,sheetName
  {
    var DataSheetPath= Project.Path+"Data_Sheets\\"+WorkBookName+".xlsx"
    if (aqFileSystem.Exists(DataSheetPath)) 
      {
        Log.Message("DataSheet is Avaliable in the Path: "+DataSheetPath )
        var excelFile = Excel.Open(DataSheetPath);
        var excelSheet = excelFile.SheetByTitle(sheetName);
        var rowIndex = excelSheet.RowCount + 1;
        var columnCount=excelSheet.ColumnCount;
        var columnIndexDict = {};
        for(var i=2;i<columnCount+1;i++)
          {
            columnIndexDict[i]=excelSheet.Cell(i,2).Value;
          }
        var dataReaderMap={};
        for(var j=3;j<rowIndex;j++){
          var dataReaderInnerMap={};
          for(var i=2;i<columnCount+1;i++){
            var xlData=excelSheet.Cell(i,j).Value;
            //Log.Message(xlData);
            if (xlData && typeof xlData === 'string' || xlData === 'number'){
              var TD=xlData.trim();
              }
              else{var TD=xlData}
            dataReaderInnerMap[columnIndexDict[i]]=TD;   //myString.trim()
          }
          dataReaderMap[(excelSheet.Cell(1,j).Value)]=dataReaderInnerMap;
        }
     }else{
       Log.Error("DataSheet is not Avaliable in the Path: "+DataSheetPath)
     }
  return dataReaderMap;
}

function addOrUpdateProjectVariable(variableName, variableType, variableValue, variableDescription) {
  try {
    if (Project.Variables.Exists(variableName)) {
      Project.Variables[variableName].Value = variableValue;
      Log.Message("Variable '" + variableName + "' updated successfully.");
    } else {
      Project.Variables.Add(variableName, variableType, variableValue, variableDescription);
      Log.Message("Variable '" + variableName + "' created successfully.");
    }
  } catch (ex) {
    Log.Error("Error adding/updating variable '" + variableName + "': " + ex.message);
  }
}


function KeyboardOperations(Operationkeys,iterations)
  {  
    Log.Enabled=false
    Delay(1000);
    var Skeys="["+Operationkeys+"]"
    for(i=1;i<=iterations;i++){
    Sys.Desktop.Keys(Skeys);
    Delay(500);}
    Log.Enabled=true
  }
  
  
function ListSelection (CompairText)
{ 
  delay(1000)
    Sys.Desktop.Keys(CompairText)
    delay(1000)
    Sys.Desktop.Keys(' ');
    delay(1000)
    }
    
    
    
function dataReader(sheetName){
    // Get the sheet of the Excel file
    var excelFile = Excel.Open(Project.Path+"\Data_Sheets\Data_Sheet.xlsx");
    var excelSheet = excelFile.SheetByTitle(sheetName);
    var rowIndex = excelSheet.RowCount + 1;
    var columnCount=excelSheet.ColumnCount;
    var columnIndexDict = {};
    for(var i=1;i<columnCount+1;i++){
      columnIndexDict[i]=excelSheet.Cell(i,1).Value;
    }
    var dataReaderMap={};
    for(var j=2;j<rowIndex;j++){
      var dataReaderInnerMap={};
      for(var i=1;i<columnCount+1;i++){
        dataReaderInnerMap[columnIndexDict[i]]=excelSheet.Cell(i,j).Value;
      }
      dataReaderMap[(excelSheet.Cell(1,j).Value)]=dataReaderInnerMap;
    }
  return dataReaderMap;
}